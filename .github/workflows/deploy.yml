name: Deploy

on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        options:
          - dev
          - qa
          - prod
jobs:
  print-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Print env argument
        run: echo User selected environment ${{ inputs.environment }}           
  deploy-dev:
    permissions: write-all
    if: ${{ inputs.environment == 'dev' }}
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: deploy
        run: echo 'Deploying to dev, token ${{ secrets.JIRA_API_KEY }}'
      
      - uses: actions/checkout@v1
      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment-dev
        with:
          token: '${{ github.token }}'
          environment: production
      - name: Deploy command
        run: |
          echo "Deploying to production"
          gh api --method POST repos/:owner/:repo/deployments \
            --field ref=main \
            --field environment=production \
            --field description="Deployment to production" \
            --field required_contexts[]=continuous-integration/main \
            --field transient_environment=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #- uses: chrnorm/deployment-status@v2
      #  name: Update deployment status (success)
      #  if: success()
      #  with:
      #    token: '${{ github.token }}'
      #    deployment-id: ${{ steps.deployment.outputs.deployment_id }}
      #    state: 'success'          
  deploy-qa:
    if: ${{ inputs.environment == 'qa' }}
    runs-on: ubuntu-latest
    environment: qa
    steps:
      - name: deploy
        run: echo "Deploying to qa"
  deploy-prod:
    if: ${{ inputs.environment == 'prod' }}
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: deploy
        run: echo "Deploying to prod"        
